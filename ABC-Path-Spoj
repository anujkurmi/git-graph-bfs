#include<bits/stdc++.h>
using namespace std;
bool check(int x,int y,int h,int w)
{
    if(x>=0 && x<h && y>=0 && y<w) return true;
    return false;
}
int main()
{
char s[50][50];
int visited[50][50];
int dist[50][50];
int h,w,cnt=1;
cin>>h>>w;
   while(h != 0 && w != 0)
   {   int maxx=0;
       int i=0,j=0;
       for(i=0;i<h;i++)
        cin>>s[i];
        memset(visited , 0 , sizeof( visited ));
        memset(dist, 0 ,sizeof( dist ));
        queue<pair<int,int>> q;
        for(i=0;i<h;i++)
            for(j=0;j<w;j++)
        {  if(s[i][j]=='A')
            {dist[i][j]=1;
            maxx=1;
            q.push(make_pair(i,j));}
        }
        int dx[]={1,1,1,-1,-1,-1,0,0};
        int dy[]={-1,1,0,-1,1,0,1,-1};
        while(!q.empty())
        {
            auto node=q.front();
            q.pop();
            int I=node.first;
            int J=node.second;
            for(i=0;i<8;i++)
            {
                int X=I+dx[i];
                int Y=J+dy[i];
                if((check(X,Y,h,w)) && (s[X][Y]==(s[I][J]+1)))
                { if(!visited[X][Y])
                {  visited[X][Y]=1;
                   dist[X][Y]=(1+dist[I][J]);
                   if(dist[X][Y]>maxx)
                   {
                       maxx=dist[X][Y];
                   }
                   q.push(make_pair(X,Y));

                }
            }
            }
        }
	cout<<"Case "<<cnt<<": "<<maxx<<"\n";
	cnt++;
        cin>>h>>w;
   }
   return 0;
}
